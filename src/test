// Global Variables
var logSerialNumber = 0;

function Page_Init() {
    checkUserCredential();
    
    function getListMessage(pageNumber, pageSize) {
        return [{
            PageNumber: pageNumber,
            PageSize: pageSize,
            CustomerNumber: CustomerNumber.IsEmpty() ? null : CustomerNumber.Val()
        }];
    }

    function getListParameters(pageNumber) {
        PinResetHistory.ResetPaging();
        return getListMessage(pageNumber, PinResetHistory.GetPagingParams().pageSize);
    }

    function executeQuery(method, params, onSuccess, onError) {
        page.Query({ method, params, onSuccess, onError });
    }

    page.SetMethod('save', {
        method: () => "Page_Save",
        validate: function () {
            [CustomerNumber, CardNumber, CardRefNumber, ReasonCode, Explanation].forEach(field => 
                page.IsEmpty({ item: field, caption: field.Name }));
            return true;
        },
        onSuccess: function (result) { }
    });

    page.SetMethod('list', {
        onSuccess: function (result) {
            result.length === 0 ? fora.Alert('EmptyQueryResult') : PinResetHistory.Val(result);
        },
        params: () => getListParameters(1),
        validate: () => true
    });

    PinResetHistory.List = function (pageNumber, pageSize) {
        executeQuery('Page_List', getListMessage(pageNumber, pageSize), result => PinResetHistory.Val(result));
    }

    toolbar.HistoryToExcel = function () {
        toExcel();
    }

    function toExcel() {
        window.open(rootFolder + "/FileServer.aspx?action=dprsr&msg=" + JSON.stringify(getListMessage(1, 10000)[0]), '', 'width=10,height=10');
    }

    GetCardList.GetCardListClick = function () {
        executeQuery('GetCustomerCardList', getCardListMessage(1, 10), function (result) {
            DebitCardList.Val(result);
            fora.$('divCardList').show();
            page.DialogManager.Open({ id: 'pnldivCardList', title: fora.SM('DebitCardList'), div: 'divCardList', height: 300, width: 635 });
        }, function () {
            if (CustomerNumber.IsEmpty()) fora.Throw('missinginfox', fora.SM('CustomerNumber'));
        });
    }

    DebitCardList.List = function (pageNumber, pageSize) {
        executeQuery('GetCustomerCardList', getCardListMessage(pageNumber, pageSize), result => DebitCardList.Val(result));
    }

    function getCardListMessage(pageNumber, pageSize) {
        return [{ CustomerNumber: CustomerNumber.Val(), PageNumber: pageNumber, PageSize: pageSize }];
    }

    function ApproveOrReject(id, methodName) {
        executeQuery('GetApprovalDetailMessage', [id], function (msgRes) {
            executeQuery(methodName, [msgRes], function (result) {
                page.DialogManager.Close('ApprovalDetailList');
                document.getElementById("RefreshBtn_Refresh").click();
                document.getElementById("approvalInfo").innerHTML = result.Message;
            }, function (result) {
                page.DialogManager.Close('ApprovalDetailList');
                document.getElementById("approvalInfo").innerHTML = result;
            });
        });
    }

    DebitCardList.OnAfterSelect = function (rowId) {
        var row = DebitCardList.Rows()[rowId];
        if (row.CardStatusCode !== 'N') fora.Throw(fora.SM('PinResetIsAllowedOnlyNormalCards'));
        [CardNumber, CardRefNumber, ShadowCardNumber, MaskedCardNumber, CardTitle].forEach(field => field.Val(row[field.Name]));
        page.DialogManager.Close('pnldivCardList');
    }

    toolbar.OpenApprovalList = function () {
        page.DialogManager.Open({ id: 'ApprovalList', title: fora.SM('ApprovalList'), div: 'divApprovalList', height: 400, width: 700 });
        executeQuery('GetApprovaList', [1, 10], function (result) {
            document.getElementById("approvalInfo").innerHTML = "";
            ApprovalList.Val(result);
        });
    }

    ApprovalList.List = function (pageNumber, pageSize) {
        executeQuery('GetApprovaList', [pageNumber, pageSize], function (result) {
            document.getElementById("approvalInfo").innerHTML = "";
            ApprovalList.Val(result);
        });
    }

    ApprovalList.OnAfterSelect = function (rowId) {
        logSerialNumber = ApprovalList.Rows()[rowId].LogSerialNumber;
        executeQuery('GetApprovalDetailMessage', [logSerialNumber], function (result) {
            if (result) {
                const allowedKeys = ["MaskedCardNumber", "CardRefNumber", "ReasonCode", "Explanation"];
                ApprovalDetailList.Val([{ Key: "&nbsp", Value: "VALUE" }].concat(
                    allowedKeys.map(Key => ({ Key: fora.SM(Key), Value: result[Key] }))
                ));
            }
        });
        page.DialogManager.Open({ id: 'ApprovalDetailList', title: fora.SM('ApprovalDetailList'), div: 'divApprovalDetailList', height: 320, width: 400 });
    }

    Btn.ApprovalBtn = function () {
        ApproveOrReject(logSerialNumber, "Approve");
    }

    Btn.RejectedBtn = function () {
        ApproveOrReject(logSerialNumber, "Reject");
    }

    RefreshBtn.RefreshBtn = function () {
        executeQuery('GetApprovaList', [1, 10], function (result) {
            ApprovalList.Val(result);
        });
    }
}

function Page_Load() {
    ['divCardList', 'divApprovalList', 'divApprovalDetailList'].forEach(div => fora.$(div).hide());
}

function checkUserCredential() {
    executeQuery('CheckApprovalAuth', [], function (result) {
        var button = toolbar.GetButton("ApprovingList");
        button.Hide();
        if (result) button.Show();
    });
}
